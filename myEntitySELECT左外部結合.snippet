<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets
    xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>SELECT左外部結合グループ化</Title>
      <Shortcut>myEntity</Shortcut>
    </Header>
    <Snippet>
      <Code Language="cSharp">
        <![CDATA[
            using (var db = new dbContext())
            {
                 try
                {                    
                    //SQL出力
                    db.Database.Log = (log) => System.Diagnostics.Debug.WriteLine(log);

                    DateTime fromDt = DateTime.Now.AddYears(-8);
                    DateTime toDt = DateTime.Now.AddYears(-7);
                    var datas = from left in db.SalesPerson
                                join sub in db.SalesTerritory on left.TerritoryID equals sub.TerritoryID into subjoin
                                from right in subjoin.DefaultIfEmpty()
                                where left.ModifiedDate >= fromDt && left.ModifiedDate <= toDt
                                group new {left, right } by new { left.TerritoryID, right.Name } into grouped
                                orderby grouped.Key.TerritoryID
                                select new
                                {
                                    territoryID = grouped.Key.TerritoryID,
                                    name = grouped.Key.Name,
                                    count = grouped.Count()
                                };
                    this.bindingSource1.DataSource = datas.ToList();
                    this.dataGridView1.DataSource = bindingSource1;
                }
                catch (DbEntityValidationException ex)
                {
                    // 例外処理
                    var errorMessage = "";
                    ex.EntityValidationErrors.SelectMany(error => error.ValidationErrors).ToList()
                        .ForEach(model => errorMessage = errorMessage + model.PropertyName + " - " + model.ErrorMessage);
                    MessageBox.Show(errorMessage);
                }
            }
        ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
